- name: Install and configure dedicated server dependencies
  hosts: myhosts
  become: false
  vars:
    user_home: /home/peter
    user_name: peter
    server_archive: dedicated.tar.gz
    source_dir: /home/peter/Code

  tasks:
    - name: Copy dedicated server archive to remote host
      ansible.builtin.copy:
        src: "{{ source_dir }}/{{ server_archive }}"
        dest: "{{ user_home }}/{{ server_archive }}"
        mode: "0644"
      tags: [setup, files]

    - name: Extract dedicated server archive
      ansible.builtin.unarchive:
        src: "{{ user_home }}/{{ server_archive }}"
        dest: "{{ user_home }}/"
        owner: "{{ user_name }}"
        group: "{{ user_name }}"
        mode: "0755"
        remote_src: true
      tags: [setup, extract]

    - name: Copy server requirements script
      ansible.builtin.copy:
        src: ./server_req.sh
        dest: "{{ user_home }}/server_req.sh"
        mode: "0755"
      tags: [setup, scripts]

    - name: Execute server requirements script
      ansible.builtin.shell: /bin/bash {{ user_home }}/server_req.sh
      become: true
      register: server_req_output
      failed_when: server_req_output.rc != 0
      tags: [setup, install]

    - name: Display server requirements script output
      ansible.builtin.debug:
        var: server_req_output.stdout_lines
      when: server_req_output.stdout_lines is defined
      tags: [setup, debug]

    - name: Display server requirements script errors
      ansible.builtin.debug:
        var: server_req_output.stderr_lines
      when: server_req_output.stderr_lines is defined and server_req_output.stderr_lines | length > 0
      tags: [setup, debug]
